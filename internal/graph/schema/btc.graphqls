extend type Query {
    btcExistsAddressByHashCount(address: String!): NodeCountResponse!
    btcExistsTransactionByHashCount(address: String!): NodeCountResponse!

    btcFindContactByAddress(address: String!): NodeEntityResponse!
    btcFindTransactionByHash(address: String!): NodeEntityResponse!
    btcFindAddressByHash(address: String!): NodeEntityResponse!
    btcFindWalletForAddress(address: String!): NodeEntityResponse!
    btcFindRiskScore(address: String!): NodeEntityResponse!
    btcFindBlockByNumber(height: Int!): NodeEntityResponse!
    btcFindBlockByHash(hash: String!): NodeEntityResponse!
    btcFindBlockByTransaction(txid: String!): NodeEntityResponse!
    btcFindTransactionsByAddress(address: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindMentionsForAddress(address: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindIncomingTransactions(txid: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindOutcomingTransactions(txid: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindTransactionsInBlock(height: Int!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindAllInputAndOutputByTransaction(txid: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindTransactionsInBlockByHash(hash: String!, page: Int!, pageSize: Int!): NodeListResponse!
    btcFindWalletByWid(wid: String!): NodeEntityResponse!
    btcFindWalletAddresses(wid: String!, page: Int!, pageSize: Int!): NodeListResponse!
}
